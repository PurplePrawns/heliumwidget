{
  "always_run_in_app" : false,
  "icon" : {
    "color" : "blue",
    "glyph" : "magic"
  },
  "name" : "Helium Widget",
  "script" : "\/\/ Variables used by Scriptable.\n\/\/ These must be at the very top of the file. Do not edit.\n\/\/ icon-color: light-brown; icon-glyph: magic;\n\/* --------------------------------------------------------------\nScript: miner.js\nAuthor: PurplePrawns\nVersion: 1.0.0\nDescription:\nDisplays the current Helium Miner\/Account statistics.\nChangelog:\n1.0.0: INIT\n-------------------------------------------------------------- *\/\n\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\n\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/ CHANGE TO YOUR HNT ADDRESS \/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\nconst address = 'YOURWALLETADDRESS'\n\/\/ Set the \"When Interacting, Open URL\" to https:\/\/explorer.helium.com\/accounts\/YOURWALLETADDRESS\n\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\n\n\/\/\/ CONFIG\nconst hntfract = 100000000\nconst acctactivityreq = new Request('https:\/\/api.helium.io\/v1\/accounts\/' + address + '\/activity')\nconst acctactivityres = await acctactivityreq.loadJSON()\nconst acctactivitycursor = acctactivityres.cursor\nconst acctactivityreqclean = new Request('https:\/\/api.helium.io\/v1\/accounts\/' + address + '\/activity?cursor=' + acctactivitycursor)\nconst acctactivityresclean = await acctactivityreqclean.loadJSON()\nconst acctactivitytime = acctactivityresclean.data[0].time\n\nconst hntaccturl = 'https:\/\/api.helium.io\/v1\/accounts\/' + address\nconst hntacctreq = new Request(hntaccturl)\nconst hntacctres = await hntacctreq.loadJSON()\nconst hntbalance = hntacctres.data.balance \/ hntfract;\n\nconst coingeckoreq = new Request('https:\/\/api.coingecko.com\/api\/v3\/simple\/price?ids=helium&vs_currencies=USD')\nconst coingeckores = await coingeckoreq.loadJSON()\nconst coingeckousd = (coingeckores.helium.usd).toFixed(2);\nconst usdbalance = (coingeckousd * hntbalance).toFixed(2);\n\nconst earnurl = 'https:\/\/api.helium.io\/v1\/accounts\/' + address + '\/rewards\/sum?min_time=-1%20day&bucket=day'\nconst earnreq = new Request(earnurl)\nconst earnres = await earnreq.loadJSON()\n\nconst earnhntday = (earnres.data[0].total).toFixed(4);\nconst earnusd = (coingeckousd * hntbalance).toFixed(2);\nconst earnusdday = (coingeckousd * earnhntday).toFixed(2);\n\nconst hntlogo = new Request('https:\/\/s2.coinmarketcap.com\/static\/img\/coins\/64x64\/5665.png')\nconst img = await hntlogo.loadImage()\n\n\/\/ SCRIPT\nlet widget = createWidget(usdbalance, hntbalance, img)\nif (config.runsInWidget) {\n  Script.setWidget(widget)\n  Script.complete()\n}\nelse {\n  widget.presentSmall()\n}\n\n\/\/ Unix Time Conversion\nconst convertedTime = convertUnixTime(acctactivitytime);\nfunction convertUnixTime(unix) {\n  let a = new Date(unix * 1000),\n      year = a.getFullYear(),\n      months = ['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sept','Oct','Nov','Dec'],\n      month = months[a.getMonth()],\n      date = a.getDate(),\n      hour = a.getHours(),\n      min = a.getMinutes() < 10 ? '0' + a.getMinutes() : a.getMinutes(),\n      sec = a.getSeconds() < 10 ? '0' + a.getSeconds() : a.getSeconds();\n  return `${month} ${date}, ${year}, ${hour}:${min}`;\n}\n\n\/\/ Widget layout \nfunction createWidget(usdbalance, hntbalance, img) {\n  let w = new ListWidget()\n  w.backgroundColor = new Color(\"#000000\")\n  \n  w.addSpacer(8)\n\n\/\/ Uncomment the next 3 lines to use a logo\n\n  let image = w.addImage(img)\n  image.imageSize = new Size(30, 30)\n  image.centerAlignImage()\n\n\/\/ Uncomment the next 4 lines if not using a logo\n\n\/\/  let titleTxt = w.addText(\"Helium\")\n\/\/  titleTxt.textColor = new Color('#474DFF')\n\/\/  titleTxt.font = Font.boldSystemFont(16)\n\/\/  titleTxt.centerAlignText()\n\n  w.addSpacer(10)\n  \n  let hntPerDayTxt = w.addText(earnhntday + \" HNT\/day\")\n  hntPerDayTxt.textColor = new Color('#474DFF')\n  hntPerDayTxt.font = Font.systemFont(16)\n  hntPerDayTxt.centerAlignText()\n  \n  let usdPerDayTxt = w.addText(\"$\" + earnusdday + \" USD\/day\")\n  usdPerDayTxt.textColor =  Color.green()\n  usdPerDayTxt.font = Font.systemFont(10)\n  usdPerDayTxt.centerAlignText()\n\n  w.addSpacer(8)\n  \n  let staticTitle1Text = w.addText(\"Wallet Balance:\")\n  staticTitle1Text.textColor = Color.white()\n  staticTitle1Text.font = Font.boldSystemFont(12)\n  staticTitle1Text.centerAlignText()\n  \n  let balanceHNTTxt = w.addText(hntbalance + \" HNT\")\n  balanceHNTTxt.textColor = Color.gray()\n  balanceHNTTxt.font = Font.systemFont(10)\n  balanceHNTTxt.centerAlignText()\n\n  let balanceUSDTxt = w.addText(\"$\" + usdbalance + \" USD\")  \n  balanceUSDTxt.textColor = Color.green()\n  balanceUSDTxt.font = Font.systemFont(10)\n  balanceUSDTxt.centerAlignText() \n \n  w.addSpacer(8)\n  \n  let lastUpdateTxt = w.addText(convertUnixTime(acctactivitytime))\n  lastUpdateTxt.textColor = Color.gray()\n  lastUpdateTxt.font = Font.systemFont(10)\n  lastUpdateTxt.centerAlignText()\n\n  w.addSpacer(8)\n  w.setPadding(0, 0, 0, 0)\n  return w\n}\n",
  "share_sheet_inputs" : [

  ]
}